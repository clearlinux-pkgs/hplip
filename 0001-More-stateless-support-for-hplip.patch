From e7e087c775db9734e6f7fcce997d59dc545a0ca2 Mon Sep 17 00:00:00 2001
From: Peter Ceiley <peter@ceiley.net>
Date: Fri, 3 May 2019 23:05:49 +1000
Subject: [PATCH] Add stateless support to hplip

---
 base/g.py        | 5 ++++-
 io/hpmud/model.c | 7 +++++--
 prnt/cups.py     | 8 ++++++--
 3 files changed, 15 insertions(+), 5 deletions(-)

diff --git a/base/g.py b/base/g.py
index f73e23f..69d3f10 100644
--- a/base/g.py
+++ b/base/g.py
@@ -182,7 +182,10 @@ class ConfigBase(object):
         
 class SysConfig(ConfigBase):
     def __init__(self):
-        ConfigBase.__init__(self, '/etc/hp/hplip.conf')
+        if os.path.isfile('/etc/hp/hplip.conf'):
+            ConfigBase.__init__(self, '/etc/hp/hplip.conf')
+        else:
+            ConfigBase.__init__(self, '/usr/share/defaults/etc/hp/hplip.conf')
 
 
 class State(ConfigBase):
diff --git a/io/hpmud/model.c b/io/hpmud/model.c
index 4ea8990..e5e3b5f 100644
--- a/io/hpmud/model.c
+++ b/io/hpmud/model.c
@@ -105,8 +105,11 @@ static int ReadConfig()
         
    if((inFile = fopen(CONFDIR "/hplip.conf", "r")) == NULL) 
    {
-      BUG("unable to open %s: %m\n", CONFDIR "/hplip.conf");
-      goto bugout;
+      if((inFile = fopen("/usr/share/defaults/etc/hp/hplip.conf", "r")) == NULL) 
+      {
+         BUG("unable to open %s: %m\n", "/usr/share/defaults/etc/hp/hplip.conf");
+         goto bugout;
+      }
    } 
 
    section[0] = 0;
diff --git a/prnt/cups.py b/prnt/cups.py
index fc90e45..5968317 100644
--- a/prnt/cups.py
+++ b/prnt/cups.py
@@ -191,7 +191,11 @@ def isfamilydrv(ppds):
      #   for m in models.FAMILY_CLASSES:
       #       if m in f:
        #          family_check=1
-    filename_config = "/etc/hp/hplip.conf"
+    if os.path.isfile('/etc/hp/hplip.conf'):
+        filename_config = "/etc/hp/hplip.conf"
+    else:
+        filename_config = "/usr/share/defaults/etc/hp/hplip.conf"
+
     file_conf = open(filename_config,'r')
     for line in file_conf:
         if 'class-driver' in line:
@@ -212,7 +216,7 @@ def getPPDPath(addtional_paths=None):
     search_paths = prop.ppd_search_path.split(';') + addtional_paths
 
     for path in search_paths:
-        ppd_path = os.path.join(path, 'cups/model')
+        ppd_path = os.path.join(path, 'cups/drv')
         if os.path.exists(ppd_path):
             return ppd_path
 
-- 
2.21.0

